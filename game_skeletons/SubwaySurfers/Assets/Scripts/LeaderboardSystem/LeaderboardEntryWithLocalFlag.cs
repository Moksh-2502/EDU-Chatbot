using System;
using System.Collections.Generic;
using Newtonsoft.Json;
using Unity.Services.Leaderboards.Models;
using UnityEngine;

namespace SubwaySurfers.LeaderboardSystem
{
    /// <summary>
    /// Wrapper for Unity's LeaderboardEntry that adds a local player flag
    /// </summary>
    public class LeaderboardEntryWithLocalFlag
    {
        public LeaderboardEntry Entry { get; }
        public bool IsLocalPlayer { get; }

        private IDictionary<string, string> _metadata = null;

        public LeaderboardEntryWithLocalFlag(LeaderboardEntry entry, bool isLocalPlayer = false)
        {
            Entry = entry;
            IsLocalPlayer = isLocalPlayer;

            if (entry.Metadata != null)
            {
                try
                {
                    _metadata = JsonConvert.DeserializeObject<Dictionary<string, string>>(entry.Metadata);
                }
                catch (Exception ex)
                {
                    Debug.LogException(ex);
                    Debug.LogError($"Invalid metadata lookup format: {entry.Metadata}");
                }
            }
        }

        /// <summary>
        /// Get the name the user defined, not the one generated by ugs.
        /// </summary>
        /// <returns></returns>
        public string GetActualPlayerName()
        {
            if (Entry == null)
            {
                return "Unknown";
            }

            if (_metadata == null || _metadata.TryGetValue(LeaderboardSystemConstants.PlayerNameMetadataKey, out var playerName) == false
                || string.IsNullOrWhiteSpace(playerName))
            {
                return Entry.PlayerName;
            }
            return playerName;
        }
    }
}