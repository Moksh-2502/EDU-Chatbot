name: Base Deploy Infrastructure

on:
  workflow_call:
    inputs:
      stack-name:
        description: "The name of the CDK stack to deploy"
        required: true
        type: string
      aws-role:
        description: "The AWS IAM role ARN to assume"
        required: false
        type: string
        default: "arn:aws:iam::856284715153:role/GithubActionsOidcCdkDeployRole"
      default-game-skeleton:
        description: "The default game skeleton to use (e.g., main-abc1234 or SubwaySurfers)"
        required: false
        type: string
        default: "SubwaySurfers"
      sentry-environment:
        description: "Sentry environment (dev for ephemeral builds, staging for dev, production for prod)"
        required: true
        type: string
      build-id:
        description: "Build ID (PR number for ephemeral builds, staging for dev, production for prod)"
        required: true
        type: string
      secret-id:
        description: "AWS Secrets Manager secret ID for environment-specific secrets"
        required: true
        type: string
      bucket-name:
        description: "Custom S3 bucket name for game assets"
        required: false
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    env:
      CDK_DEFAULT_GAME_SKELETON: ${{ inputs.default-game-skeleton }}
      # Analytics Environment Variables for React Frontend Build
      NEXT_PUBLIC_BUILD_ID: ${{ inputs.build-id }}
      NEXT_PUBLIC_SENTRY_ENVIRONMENT: ${{ inputs.sentry-environment }}
      NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      NEXT_PUBLIC_MIXPANEL_TOKEN: ${{ secrets.NEXT_PUBLIC_MIXPANEL_TOKEN }}
      # Note: Cognito variables will be fetched from AWS Secrets Manager during CDK deployment
      # This allows different values for dev vs prod environments
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: deploy/pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: ./deploy

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.aws-role }}
          aws-region: us-east-1

      - name: Fetch Cognito Configuration from Secrets Manager
        id: fetch-cognito
        run: |
          # Fetch the secret from AWS Secrets Manager
          SECRET_VALUE=$(aws secretsmanager get-secret-value --secret-id "${{ inputs.secret-id }}" --query SecretString --output text)
          
          # Extract Cognito values from the JSON secret
          COGNITO_CLIENT_ID=$(echo "$SECRET_VALUE" | jq -r '.NEXT_PUBLIC_COGNITO_CLIENT_ID // empty')
          COGNITO_DOMAIN=$(echo "$SECRET_VALUE" | jq -r '.NEXT_PUBLIC_COGNITO_DOMAIN // empty')
          
          # Set as environment variables for subsequent steps
          echo "NEXT_PUBLIC_COGNITO_CLIENT_ID=$COGNITO_CLIENT_ID" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_COGNITO_DOMAIN=$COGNITO_DOMAIN" >> $GITHUB_ENV
          
          # Log what we found (without exposing sensitive values)
          echo "Found Cognito Client ID: $([ -n "$COGNITO_CLIENT_ID" ] && echo "✓" || echo "✗")"
          echo "Found Cognito Domain: $([ -n "$COGNITO_DOMAIN" ] && echo "✓" || echo "✗")"

      - name: Deploy
        run: pnpm cdk deploy --require-approval never ${{ inputs.stack-name }}
        working-directory: ./deploy
        env:
          # Pass analytics build args to CDK for Docker build
          CDK_BUILD_ARGS: |
            NEXT_PUBLIC_BUILD_ID=${{ env.NEXT_PUBLIC_BUILD_ID }}
            NEXT_PUBLIC_SENTRY_ENVIRONMENT=${{ env.NEXT_PUBLIC_SENTRY_ENVIRONMENT }}
            NEXT_PUBLIC_SENTRY_DSN=${{ env.NEXT_PUBLIC_SENTRY_DSN }}
            NEXT_PUBLIC_MIXPANEL_TOKEN=${{ env.NEXT_PUBLIC_MIXPANEL_TOKEN }}
            NEXT_PUBLIC_COGNITO_CLIENT_ID=${{ env.NEXT_PUBLIC_COGNITO_CLIENT_ID }}
            NEXT_PUBLIC_COGNITO_DOMAIN=${{ env.NEXT_PUBLIC_COGNITO_DOMAIN }}
          # Pass bucket name to CDK
          CDK_S3_BUCKET_NAME: ${{ inputs.bucket-name }}
